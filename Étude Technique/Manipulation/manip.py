import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

#%% Données des expériences :

A = [(1001, 0.25, 33.97058824),
     (1001, 0.5, 32.3153527),
     (1001, 1, 29.08045977),
     (1001, 1.5, 25.8869258),
     (1001, 2, 22.3514377),
     (1001, 3, 16.00251256),
     (1001, 4, 12.19712526),
     (1001, 5, 9.78),
     (1001, 6, 7.385714286),
     (1001, 7, 5.964444444),
     (1001, 8, 4.675)  
     ]

B = [(4996, 0.25, 26.71698113),
      (4996, 0.5, 25.79439252),
      (4996, 1, 23.56363636),
      (4996, 1.5, 20.55737705),
      (4996, 2, 18.36923077),
      (4996, 3, 14.13157895),
      (4996, 4, 9.6),
      (4996, 5, 7.4),
      (4996, 6, 5.863636364),
      (4996, 7, 4.593103448),
      (4996, 8, 3.6),
      (4996, 9, 1.2)   
      ]

C = [(10020, 0.25, 25.22222222),
      (10020, 0.5, 24.32876712),
      (10020, 1, 22.21052632),
      (10020, 2, 16.10294118),
      (10020, 3, 12.21428571),
      (10020, 4, 10.04347826),
      (10020, 5, 7.729007634),
      (10020, 6, 5.95890411),
      (10020, 7, 4.318181818),
      (10020, 8, 3.041666667),
      (10020, 9, 1.884615385)  
      ]

D = [(14959, 0.25, 24.18181818),
      (14959, 0.5, 22.82248521),
      (14959, 1, 19.3015873),
      (14959, 1.5, 16.77560976),
      (14959, 2, 15.28941176),
      (14959, 3, 12.52654867),
      (14959, 4, 7.6296875),
      (14959, 5, 6.057971014),
      (14959, 6, 4.457692308),
      (14959, 7, 3.204545455),
      (14959, 8, 2.16146789),
      (14959, 9, 1.550332594)  
      ]

E = [(20037, 0.25, 22.87272727),
      (20037, 0.5, 21.24),
      (20037, 1, 18.7),
      (20037, 1.5, 17.6494382),
      (20037, 2, 16.14065934),
      (20037, 3, 10.4448),
      (20037, 4, 7.493877551),
      (20037, 5, 5.815243902),
      (20037, 6, 4.136666667),
      (20037, 7, 3.032432432),
      (20037, 8, 1.8156),
      (20037, 9, 1.025230769)   
      ]

F = [(25000, 0.25, 24.2),
      (25000, 0.5, 21.14693878),
      (25000, 1, 19.272),
      (25000, 1.5, 17.51538462),
      (25000, 2, 14.93684211),
      (25000, 3, 11.90163934),
      (25000, 4, 7.04),
      (25000, 5, 5.239175258),
      (25000, 6, 3.677142857),
      (25000, 7, 2.43),
      (25000, 8, 1.212820513),
      (25000, 8.5, 0.611707317)   
      ]

G = [(30041, 0.25, 24.42),
      (30041, 0.5, 22.935),
      (30041, 1, 19.21333333),
      (30041, 1.5, 16.99148936),
      (30041, 2, 14.20571429),
      (30041, 3, 9.267123288),
      (30041, 4, 6.762962963),
      (30041, 5, 4.913333333),
      (30041, 6, 3.232653061),
      (30041, 7, 1.961142857),
      (30041, 8, 0.9)   
      ]

H = [(34935, 0.5, 25.96666667),
      (34935, 1, 22),
      (34935, 1.5, 18.81),
      (34935, 2, 14.46923077),
      (34935, 3, 10.35172414),
      (34935, 4, 7.71875),
      (34935, 5, 4.75),
      (34935, 6, 2.8),
      (34935, 7, 0.844444444),
      ]

#%% Analyse :
data = [A, B, C, D, E, F, G, H]


# Extraction des données de la datasheet
currents_datasheet = [0, 1, 2, 3, 4, 5, 6]
inductances_datasheet = [568.15, 568.15, 500, 431.37, 372.55, 323.53, 279.41]

# Création du plot 2D
plt.figure()

# Tracer les courbes expérimentales avec des croix et des pointillés
for dataset in data:
    currents_exp = [point[1] for point in dataset]
    inductances_exp = [point[2] * 1000 / 40 for point in dataset]  # Convertir en µH
    plt.plot(currents_exp, inductances_exp, marker='x', linestyle='--', label=f'{round(dataset[0][0]/1000)} kHz')

# Tracer la courbe de la datasheet en rouge
plt.plot(currents_datasheet, inductances_datasheet, marker='s', color='red', linestyle='-', label='Datasheet\n10 kHz')

# Ajout des titres et labels
plt.title('Inductance en fonction du courant moyen DC')
plt.xlabel('Courant moyen DC (A)')
plt.ylabel('Inductance (µH)')
plt.grid(True)

# Ajout de la légende
plt.legend()

# Enregistrer le plot au format SVG
plt.savefig('manip_1_2D_all_frequencies.svg', format='svg')

# Affichage
plt.show()